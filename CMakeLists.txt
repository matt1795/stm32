cmake_minimum_required(VERSION 3.0)
set(CMAKE_TOOLCHAIN_FILE "${CMAKE_CURRENT_SOURCE_DIR}/arm-gcc-toolchain.cmake")
project(stm32 LANGUAGES C CXX ASM)

execute_process(
	COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/fetch_dependencies.sh"
	${CMAKE_CURRENT_SOURCE_DIR} 
	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

set(STM32_CUBE "${CMAKE_CURRENT_BINARY_DIR}/stm32-cube")
file(GLOB SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")

set(LINKER_SCRIPT
	"${STM32_CUBE}/Projects/NUCLEO-L073RZ/Templates/SW4STM32/STM32L073RZ_NUCLEO/STM32L073RZTx_FLASH.ld")

set(WARNING_FLAGS "${WARNING_FLAGS} -Wall")
set(SHARED_FLAGS "${SHARED_FLAGS} -Os -flto -nostartfiles -DSTM32L073xx")
set(SHARED_FLAGS "${SHARED_FLAGS} -MMD -MP")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${SHARED_FLAGS} ${WARNING_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${SHARED_FLAGS} ${WARNING_FLAGS}")

set(CMAKE_EXE_LINKER_FLAGS 
	"${CMAKE_EXE_LINKER_FLAGS} -flto -T ${LINKER_SCRIPT}")
	
include_directories(
	"${STM32_CUBE}/Drivers/CMSIS/Device/ST/STM32L0xx/Include"
	"${STM32_CUBE}/Drivers/CMSIS/Include"
	"${CMAKE_CURRENT_SOURCE_DIR}/include"
)

add_executable(stm32 
	"${STM32_CUBE}/Drivers/CMSIS/Device/ST/STM32L0xx/Source/Templates/gcc/startup_stm32l073xx.s"
	${SOURCES}
)

add_custom_command(
	TARGET stm32 POST_BUILD
	COMMAND ${CMAKE_OBJCOPY} stm32 -O binary stm32.bin
	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	COMMENT "Convert ELF to binary"
)
